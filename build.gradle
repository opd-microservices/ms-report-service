buildscript {
	ext {
        springBootVersion = "${springBootVersion}"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
/* Provides a task similar to Tar and Zip for constructing RPM and DEB package files. */
//apply plugin: 'nebula.ospackage'

bootJar {
    baseName = 'ms-report-service'
    version = '1.0-SNAPSHOT'
}

ext {
	jacocoVersion = '0.7.6.201602180812'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	  compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	  compile('org.springframework.boot:spring-boot-starter-web')
	  testCompile('org.springframework.boot:spring-boot-starter-test')
	  testCompile('org.springframework.cloud:spring-cloud-starter-eureka-server')	
	
	compile("org.springframework.boot:spring-boot-starter-actuator")
	
	
	compile("org.springframework.cloud:spring-cloud-starter-config")
	compile("org.springframework.cloud:spring-cloud-starter-openfeign")
	//compile("org.springframework.cloud:spring-cloud-starter-netflix-ribbon")
	
	compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix")
	
	//compile("org.springframework.cloud:spring-cloud-netflix-feign")
	compile("org.springframework.cloud:spring-cloud-starter-zipkin")
	compile("org.springframework.cloud:spring-cloud-starter-sleuth")
	//compile("org.springframework.boot:spring-boot-starter-data-jpa")
	
    testCompile("junit:junit")
}


task wrapper(type: Wrapper) {
	gradleVersion = '4.10'

}

jacoco {
	toolVersion = jacocoVersion
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled true
		html.destination "$buildDir/reports/jacoco/html"
		xml.destination "$buildDir/reports/jacoco/xml"
		csv.destination "$buildDir/reports/jacoco/csv"
	}
}

jacocoTestReport.dependsOn test

test {
	ignoreFailures true
	jacoco {
		destinationFile = file ("$buildDir/jacoco/junitTest.exec")
	}
}

test.finalizedBy jacocoTestReport 
